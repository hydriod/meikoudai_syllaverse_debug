name: Run the WebGL build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'

env:
  projectPath: meikoudai_syllaverse
  buildPath: meikoudai_syllaverse/build

jobs:
  build:
    name: Run the WebGL build
    runs-on: ubuntu-latest
    steps:
      # actions/checkout@v2 を利用して作業ディレクトリに
      # Unity プロジェクトの中身をダウンロードしてくる
      - name: Check out my unity project.
        uses: actions/checkout@v3

      # ライブラリのキャッシュを復元
      # manifest.jsonが一致するものを使用
      # ない場合は代替(restore-keys)を使い，新しくキャッシュを作成する
      - name: Cache unity library
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-Unity-Library-${{ hashFiles('meikoudai_syllaverse/Packages/manifest.json') }}
          restore-keys: ${{ runner.os }}-Unity-Library-
          path: ${{ env.projectPath }}/Library

      # GameCI の Builder を利用して、
      # Unity プロジェクトのビルドを実行する
      - name: Run the WebGL build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          # 今回は WebGL ビルドを行いたいため WebGL を指定する
          targetPlatform: WebGL
          unityVersion: ${{ vars.UNITY_VERSION }}
          projectPath: ${{ env.projectPath }}
          buildsPath: ${{ env.buildPath }}

      # Builder で出力した WebGL ビルドを GitHub Pages にデプロイする
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          # GitHub Pages デプロイ用の Orphan ブランチ名を指定する
          branch: gh-pages
          # デプロイ用ビルドフォルダパスを指定する
          # GameCI の Builder はデフォルトでは build フォルダにビルド内容を出力する
          folder: ${{ env.buildPath }}/WebGL/WebGL
          git-config-name: GitHub Action
          git-config-email: action@github.com

      # Builder で出力した WebGL ビルドをアーティファクトでダウンロード可能にする
      - name: Upload the WebGL Build
        uses: actions/upload-artifact@v2
        with:
          name: Build
          path: ${{ env.buildPath }}/WebGL/WebGL
